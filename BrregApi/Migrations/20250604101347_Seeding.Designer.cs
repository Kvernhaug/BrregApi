// <auto-generated />
using BrregApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrregApi.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20250604101347_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BrregApi.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipalityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Norge",
                            CountryCode = "NO",
                            Municipality = "BERGEN",
                            MunicipalityNumber = "4601",
                            PostalCode = "5007",
                            Region = "BERGEN",
                            Street = "[\"Parkveien 1\"]"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Norge",
                            CountryCode = "NO",
                            Municipality = "BERGEN",
                            MunicipalityNumber = "4601",
                            PostalCode = "5160",
                            Region = "LAKSEVÅG",
                            Street = "[\"Damsg\\u00E5rdsveien 175\"]"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Norge",
                            CountryCode = "NO",
                            Municipality = "HAUGESUND",
                            MunicipalityNumber = "1106",
                            PostalCode = "5536",
                            Region = "HAUGESUND",
                            Street = "[\"Deco-bygget\",\"Longhammarvegen 28\"]"
                        });
                });

            modelBuilder.Entity("BrregApi.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Homepage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OrganizationTypeId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Email = "seiling@bsi.no",
                            Homepage = "www.bsiseiling.no",
                            Name = "BSI - SEILING",
                            OrgNumber = "916598408",
                            OrganizationTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "badminton@bsi.no",
                            Homepage = "badminton.bsi.no/no/",
                            Name = "BSI - BADMINTON",
                            OrgNumber = "998008166",
                            OrganizationTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 2,
                            Email = "innebandy@bsi.no",
                            Homepage = "www.innebandy.bsi.no",
                            Name = "BSI - INNEBANDY",
                            OrgNumber = "918995897",
                            OrganizationTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 3,
                            Email = "hello@appex.no",
                            Homepage = "www.appex.no",
                            Name = "APPEX AS",
                            OrgNumber = "995412020",
                            OrganizationTypeId = 4
                        });
                });

            modelBuilder.Entity("BrregApi.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Note = "Test"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            Note = "Testing"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            Note = "This is a test"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 4
                        });
                });

            modelBuilder.Entity("BrregApi.Models.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FLI",
                            Description = "Forening/lag/innretning"
                        },
                        new
                        {
                            Id = 2,
                            Code = "FLI",
                            Description = "Forening/lag/innretning"
                        },
                        new
                        {
                            Id = 3,
                            Code = "FLI",
                            Description = "Forening/lag/innretning"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AS",
                            Description = "Aksjeselskap"
                        });
                });

            modelBuilder.Entity("BrregApi.Models.Company", b =>
                {
                    b.HasOne("BrregApi.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("BrregApi.Models.OrganizationType", "OrganizationType")
                        .WithMany()
                        .HasForeignKey("OrganizationTypeId");

                    b.Navigation("Address");

                    b.Navigation("OrganizationType");
                });

            modelBuilder.Entity("BrregApi.Models.Customer", b =>
                {
                    b.HasOne("BrregApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
